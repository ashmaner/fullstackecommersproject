{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"E:/EcomersFullStack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import FromContainer from\"../components/shared/FromContainer\";import{saveShippingAddress}from\"../actions/cartAction\";import ChekcoutStep from\"../components/shared/CheckoutStep\";import CheckoutStep from\"../components/shared/CheckoutStep\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalcode),_useState6=_slicedToArray(_useState5,2),postalcode=_useState6[0],setPostalcode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();//dispatch\ndispatch(saveShippingAddress({address:address,city:city,postalcode:postalcode,country:country}));history.push(\"/payment\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CheckoutStep,{step1:true,step2:true}),/*#__PURE__*/_jsx(FromContainer,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Address\",value:address,onChange:function onChange(e){return setAddress(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter City\",value:city,onChange:function onChange(e){return setCity(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalcode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"PostalCode\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter postalcode\",value:postalcode,onChange:function onChange(e){return setPostalcode(e.target.value);},required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Country\",value:country,onChange:function onChange(e){return setCountry(e.target.value);},required:true})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"continue\"})]})})]});};export default ShippingScreen;","map":{"version":3,"sources":["E:/EcomersFullStack/frontend/src/screens/ShippingScreen.jsx"],"names":["React","useState","Form","Button","useDispatch","useSelector","FromContainer","saveShippingAddress","ChekcoutStep","CheckoutStep","ShippingScreen","history","dispatch","cart","state","shippingAddress","address","setAddress","city","setCity","postalcode","setPostalcode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromContainer from \"../components/shared/FromContainer\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport ChekcoutStep from \"../components/shared/CheckoutStep\";\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\n\nconst ShippingScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalcode, setPostalcode] = useState(shippingAddress.postalcode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //dispatch\n    dispatch(saveShippingAddress({ address, city, postalcode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <>\n      <CheckoutStep step1 step2 />\n      <FromContainer>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter City\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"postalcode\">\n            <Form.Label>PostalCode</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter postalcode\"\n              value={postalcode}\n              onChange={(e) => setPostalcode(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Country\"\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            continue\n          </Button>\n        </Form>\n      </FromContainer>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}