{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"E:/EcomersFullStack/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/shared/Message\";import Loader from\"../components/shared/Loader\";import{register}from\"../actions/userAction\";import FormContainer from\"../components/shared/FromContainer\";var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var redirect=location.search?location.search.split(\"=\")[1]:\"/\";var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;useEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();//dispatch\nif(password!==confirmPassword){setMessage(\"Password do not macth\");}else{dispatch(register(name,email,password));}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),error&&/*#__PURE__*/_jsx(Message,{varient:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"COnfirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Re-enter password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",varient:\"primary\",children:\"SING IN\"})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{children:[\"Have an account !\",/*#__PURE__*/_jsx(Link,{to:redirect?\"login?redirect=\".concat(redirect):\"/login\",children:\"Login\"})]})})]})});};export default RegisterScreen;","map":{"version":3,"sources":["E:/EcomersFullStack/frontend/src/screens/RegisterScreen.jsx"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","register","FormContainer","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","redirect","search","split","dispatch","userRegister","state","loading","error","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"gSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,GAA5B,KAAuC,iBAAvC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAdC,OAAc,MAAdA,OAAc,eACxBf,QAAQ,CAAC,EAAD,CADgB,wCACzCgB,IADyC,eACnCC,OADmC,8BAEtBjB,QAAQ,CAAC,EAAD,CAFc,yCAEzCkB,KAFyC,eAElCC,QAFkC,8BAGhBnB,QAAQ,CAAC,EAAD,CAHQ,yCAGzCoB,QAHyC,eAG/BC,WAH+B,8BAIFrB,QAAQ,CAAC,EAAD,CAJN,yCAIzCsB,eAJyC,eAIxBC,kBAJwB,8BAKlBvB,QAAQ,CAAC,EAAD,CALU,0CAKzCwB,OALyC,gBAKhCC,UALgC,gBAOhD,GAAMC,CAAAA,QAAQ,CAAGZ,QAAQ,CAACa,MAAT,CAAkBb,QAAQ,CAACa,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB,CAAkD,GAAnE,CAEA,GAAMC,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA,GAAMuB,CAAAA,YAAY,CAAGtB,WAAW,CAAC,SAACuB,KAAD,QAAWA,CAAAA,KAAK,CAACD,YAAjB,EAAD,CAAhC,CAVgD,GAWxCE,CAAAA,OAXwC,CAWXF,YAXW,CAWxCE,OAXwC,CAW/BC,KAX+B,CAWXH,YAXW,CAW/BG,KAX+B,CAWxBC,QAXwB,CAWXJ,YAXW,CAWxBI,QAXwB,CAahDjC,SAAS,CAAC,UAAM,CACd,GAAIiC,QAAJ,CAAc,CACZnB,OAAO,CAACoB,IAAR,CAAaT,QAAb,EACD,CACF,CAJQ,CAIN,CAACX,OAAD,CAAUmB,QAAV,CAAoBR,QAApB,CAJM,CAAT,CAMA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACA;AACA,GAAIlB,QAAQ,GAAKE,eAAjB,CAAkC,CAChCG,UAAU,CAAC,uBAAD,CAAV,CACD,CAFD,IAEO,CACLI,QAAQ,CAAClB,QAAQ,CAACK,IAAD,CAAOE,KAAP,CAAcE,QAAd,CAAT,CAAR,CACD,CACF,CARD,CAUA,mBACE,sCACE,MAAC,aAAD,yBACE,gCADF,CAEGa,KAAK,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EAFZ,CAGGD,OAAO,eAAI,KAAC,MAAD,IAHd,CAIGR,OAAO,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,OAA3B,EAJd,cAKE,MAAC,IAAD,EAAM,QAAQ,CAAEY,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,mBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,YAFd,CAGE,KAAK,CAAEpB,IAHT,CAIE,QAAQ,CAAE,kBAACqB,CAAD,QAAOpB,CAAAA,OAAO,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd,EAJZ,EAFF,GADF,cAUE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,4BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,aAFd,CAGE,KAAK,CAAEtB,KAHT,CAIE,QAAQ,CAAE,kBAACmB,CAAD,QAAOlB,CAAAA,QAAQ,CAACkB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf,EAJZ,EAFF,GAVF,cAmBE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,uBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAEpB,QAHT,CAIE,QAAQ,CAAE,kBAACiB,CAAD,QAAOhB,CAAAA,WAAW,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAJZ,EAFF,GAnBF,cA4BE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,+BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,mBAFd,CAGE,KAAK,CAAElB,eAHT,CAIE,QAAQ,CAAE,kBAACe,CAAD,QAAOd,CAAAA,kBAAkB,CAACc,CAAC,CAACE,MAAF,CAASC,KAAV,CAAzB,EAJZ,EAFF,GA5BF,cAqCE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,qBArCF,GALF,cA8CE,KAAC,GAAD,wBACE,MAAC,GAAD,6CAEE,KAAC,IAAD,EAAM,EAAE,CAAEd,QAAQ,0BAAqBA,QAArB,EAAkC,QAApD,mBAFF,GADF,EA9CF,GADF,EADF,CA2DD,CAxFD,CA0FA,cAAeb,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/shared/Message\";\nimport Loader from \"../components/shared/Loader\";\nimport { register } from \"../actions/userAction\";\nimport FormContainer from \"../components/shared/FromContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //dispatch\n    if (password !== confirmPassword) {\n      setMessage(\"Password do not macth\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <>\n      <FormContainer>\n        <h1>Register</h1>\n        {error && <Message varient=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>COnfirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Re-enter password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" varient=\"primary\">\n            SING IN\n          </Button>\n        </Form>\n        <Row>\n          <Col>\n            Have an account !\n            <Link to={redirect ? `login?redirect=${redirect}` : \"/login\"}>\n              Login\n            </Link>\n          </Col>\n        </Row>\n      </FormContainer>\n    </>\n  );\n};\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}